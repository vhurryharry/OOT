pipelines:
  default:
    - parallel:
        - step:
            name: Backend tests
            image: php:latest
            caches:
              - composer
            script:
              - apt-get update && apt-get install -y unzip libpq-dev
              - docker-php-ext-install pdo_pgsql
              - docker-php-ext-install xsl
              - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
              - composer install
              - composer test
            services:
              - postgres

        - step:
            name: Frontend tests
            image: node:latest
            caches:
              - node
            script:
              - npm install
              - npm test
              - npm run lint:check

    - step:
        name: Deploy to staging
        image: ruby:latest
        deployment: Staging
        caches:
          - bundler
        script:
          - gem install bundler
          - bundle install
          - cap staging deploy

    - step:
        name: Deploy to production
        image: ruby:latest
        deployment: Production
        trigger: manual
        caches:
          - bundler
        script:
          - gem install bundler
          - bundle install
          - cap production deploy

definitions:
  caches:
    bundler: ./vendor
  services:
    postgres:
      image: postgres
      variables:
        POSTGRES_DB: 'oo_test'
        POSTGRES_USER: 'root'
        POSTGRES_PASSWORD: '123456'
